1. 创建项目所需要的表
    Attachment： 附件表（项目中需要文档类型规范：编码规范 注释规范  命名规范。。）
	Project： 项目表（公司经营的主体业务）
	Customer： 客户表（统计保存客户信息）
	Analysis： 需求表（当前的项目的编写过程中需求分析文档）
	Module: 模块（项目中的具体模块：人员管理 业务管理 仓储信息）
	Function： 功能表（一个模块下有多个功能）
	Task: 任务表 （那些功能分配给了具体人）
	Notice： 通知公告（任命，会议通知，考勤情况）
	Employee： 员工表（员工的基本信息）
	Role: 角色表
	Emp_role：员工和角色中间表 
	Role_sources: 角色和资源的中间表
	Sources： 资源表（能够去点击那些连接，能够去操作那些功能） 
	Email： 邮件表（发送邮件 查看发送的邮件）
	Comparsion: 对标管理的表（设定明年的目标，对比企业概况）
	Dept： 部门表 （it）
	Position： 职位表
	level 级别表：当前的职位对应的级别
	Msg： 消息表（定时发送一些剪短消息）
	Baoxiao: 员工报销的表格
	Dangan: 员工的档案表


2.项目技术点：
   主体架构： Spring+springMVC+Mybatis（处理业务技术）
    Maven：完成jar文件的管理
	Redis： 缓存（把我们经常使用的数据放入redis）减轻db压力（商城项目）
	Echars： 图表工具，数据统计:百度
	Ueditor:  图文混排  论坛:百度
	
	阿里巴巴的druid数据源： 稳定 高效  世界上最好的数据源技术

	
	页面主体：bootstarp.js //比较火
	
	Quartz： 定时任务，消息的定时发送
	JavaMail: 发送邮件
	Ztree插件：树插件
	


3.项目搭建：
  maven创建ssm项目：
    1.导入jar包依赖：ssm、jstl、json、commons-fileupload/commons-io、druid、mysql、jsp、log4j、junit
	
	2.在web.xml文件中配置spring和springmvc及两个filter
	   contextLoaderListener
	   
	   DispatcherServlet
	   
	   CharacterEncodingFilter:处理POST请求乱码
	   
	   HiddenHttpMethodFilter:将POST请求转换为PUT或者DELETE请求
	   
	3.创建springmvc.xml，并配置
	   配置扫描包【加了Controller、ControllerAdvice】
	   配置内部资源视图解析器
	   mvc:default-servlet-handler
	   mvc:annotation-driven
	   
	4.beans.xml,并配置：
	   配置扫描包【除了加@Controller、@ControllerAdvice】
	   加载properties配置文件
	   配置数据源
	   配置数据源事务管理器
	   开启基于注解的事务支持
	   
	   
	   SqlSessionFactoryBean
	     dataSource
		 Configlocation
		 
	   MapperScannerConfigurer:
	     basePackage:扫描mapper接口
		 
	5.MyBatis的配置文件：
      settings
 
    6.测试代码


MBG:在maven使用使用插件的方式
  1.导入mybatis-generator-core的依赖
        <dependency>
		  <groupId>org.mybatis.generator</groupId>
		  <artifactId>mybatis-generator-core</artifactId>
		  <version>1.3.5</version>
		</dependency>
  
  2. pom.xml配置mybatis-generator-core 插件
     <plugin>
        <groupId>org.mybatis.generator</groupId>
        <artifactId>mybatis-generator-maven-plugin</artifactId>
        <version>1.3.2</version>
        <configuration>
          <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
          <verbose>true</verbose>
          <overwrite>true</overwrite>
        </configuration>
		<dependencies>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.37</version>
          </dependency>
        </dependencies>
      </plugin>
  
  3. 准备mybatis逆向工程所需要的配置文件
    <?xml version="1.0" encoding="UTF-8"?>
	<!DOCTYPE generatorConfiguration
			PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
			"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

	<generatorConfiguration>
		<!-- 有Example查询条件内容 -->
		<context id="testTables" targetRuntime="MyBatis3">
			<commentGenerator >
				<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
				<property name="suppressAllComments" value="true" />
			</commentGenerator>

			<!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
			<jdbcConnection
					driverClass="com.mysql.jdbc.Driver"
					connectionURL="jdbc:mysql://localhost:3306/crmpro"
					userId="root"
					password="root">
			</jdbcConnection>

			<javaTypeResolver>
				<property name="forceBigDecimals" value="false" />
			</javaTypeResolver>

			<!-- targetProject:生成Entity类的路径 -->
			<javaModelGenerator targetProject=".\src" targetPackage="bean">
				<!-- enableSubPackages:是否让schema作为包的后缀 -->
				<property name="enableSubPackages" value="false" />
				<!-- 从数据库返回的值被清理前后的空格 -->
				<property name="trimStrings" value="true" />
			</javaModelGenerator>

			<!-- targetProject:XXXMapper.xml映射文件生成的路径 -->
			<sqlMapGenerator targetProject=".\src" targetPackage="dao">
				<!-- enableSubPackages:是否让schema作为包的后缀 -->
				<property name="enableSubPackages" value="false" />
			</sqlMapGenerator>

			<!-- targetPackage：Mapper接口生成的位置 -->
			<javaClientGenerator type="XMLMAPPER" targetProject=".\src" targetPackage="dao">
				<!-- enableSubPackages:是否让schema作为包的后缀 -->
				<property name="enableSubPackages" value="false" />
			</javaClientGenerator>

			<table tableName="employee" 	domainObjectName="Employee"/>

		</context>
	</generatorConfiguration>
	  

	
	
	
	
	
	
	
	
	
	
	
	
	
	












